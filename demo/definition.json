{
  "swagger": "2.0",
  "info": {
    "title": "Koodilehto CRM API",
    "description": "Manage your clients and invoices using Koodilehto CRM API",
    "version": "0.2.1"
  },
  "host": "127.0.0.1:3000",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/v1",
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "jwt": []
    }
  ],
  "paths": {
    "/clients": {
      "get": {
        "description": "The Clients endpoint returns information about clients the user is affiliated with. The response includes basic details of each client, such as name, in chronological order.\n",
        "responses": {
          "200": {
            "description": "An array of clients",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Client"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "client",
        "operationId": "getClient",
        "tags": [
          "client"
        ]
      },
      "post": {
        "description": "The Clients endpoint allows you to create a new client to the system.\n",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Client JSON you want to POST",
            "schema": {
              "$ref": "#/definitions/Client"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Id of the created client",
            "schema": {
              "$ref": "#/definitions/Id"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "client",
        "operationId": "postClient",
        "tags": [
          "client"
        ]
      },
      "put": {
        "description": "The Clients endpoint allows you to update a client already existing in the system.\n",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Client JSON you want to PUT",
            "schema": {
              "$ref": "#/definitions/Client"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Id of the updated client",
            "schema": {
              "$ref": "#/definitions/Id"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "client",
        "operationId": "putClient",
        "tags": [
          "client"
        ]
      }
    },
    "/languages": {
      "get": {
        "description": "Languages of the system",
        "responses": {
          "200": {
            "description": "An array of languages",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "en-en",
                  "fi-fi"
                ],
                "readOnly": true
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "language",
        "operationId": "getLanguage",
        "tags": [
          "language"
        ]
      }
    },
    "/pending_invoices": {
      "get": {
        "description": "This endpoint returns information about invoices that are pending (ie. not sent yet). The response includes basic details of each invoice, such as sender and receiver information.\n",
        "responses": {
          "200": {
            "description": "An array of pending invoices",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoicePending"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "pending_invoice",
        "operationId": "getPending_invoice",
        "tags": [
          "pending_invoice"
        ]
      },
      "post": {
        "description": "The Invoices endpoint allows you to create a new client to the system.\n",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Invoice JSON you want to POST",
            "schema": {
              "$ref": "#/definitions/InvoicePending"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Id of the created invoice",
            "schema": {
              "$ref": "#/definitions/Id"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "pending_invoice",
        "operationId": "postPending_invoice",
        "tags": [
          "pending_invoice"
        ]
      },
      "put": {
        "description": "The Invoices endpoint allows you to update an invoice already existing in the system.\n",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Invoice JSON you want to PUT",
            "schema": {
              "$ref": "#/definitions/InvoicePending"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Id of the updated invoice",
            "schema": {
              "$ref": "#/definitions/Id"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "pending_invoice",
        "operationId": "putPending_invoice",
        "tags": [
          "pending_invoice"
        ]
      }
    },
    "/sent_invoices": {
      "get": {
        "description": "This endpoint returns information about invoices that have been sent. The response includes basic details of each invoice, such as sender and receiver information.",
        "responses": {
          "200": {
            "description": "An array of sent invoices",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InvoiceSent"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "sent_invoice",
        "operationId": "getSent_invoice",
        "tags": [
          "sent_invoice"
        ]
      },
      "post": {
        "description": "This endpoint allows you to send pending invoices.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The Invoice JSON you want to POST",
            "schema": {
              "pendingInvoices": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Id"
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of the sent invoices",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Id"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "x-swagger-router-controller": "sent_invoice",
        "operationId": "postSent_invoice",
        "tags": [
          "sent_invoice"
        ]
      }
    }
  },
  "definitions": {
    "Client": {
      "required": [
        "name",
        "address",
        "city",
        "postalCode",
        "phone",
        "companyId",
        "iban",
        "bic",
        "language"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the invoice pending"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "companyId": {
          "$ref": "#/definitions/Id"
        },
        "iban": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "language": {
          "type": "string",
          "enum": [
            "en-en",
            "fi-fi"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was created at",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was updated at",
          "readOnly": true
        }
      }
    },
    "Created": {
      "type": "string",
      "format": "date-time",
      "description": "Day in which the item was created at",
      "readOnly": true
    },
    "Error": {
      "properties": {
        "payload": {
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Id": {
      "type": "integer",
      "format": "int32",
      "description": "Id of the invoice pending"
    },
    "InvoiceItem": {
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the invoice item"
        },
        "cost": {
          "type": "number",
          "description": "Cost of the invoice item"
        },
        "vat": {
          "default": 0,
          "type": "number",
          "description": "Vat of the invoice item"
        }
      }
    },
    "InvoicePending": {
      "required": [
        "sender",
        "receiver",
        "items",
        "due",
        "paymentDays"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the invoice pending"
        },
        "invoiceId": {
          "type": "number",
          "description": "Unique invoice id generated internally by the backend",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "WAITING_TO_BE_SENT",
            "SENT",
            "WAITING_PAYMENT",
            "RECEIVED_PAYMENT"
          ],
          "readOnly": true,
          "description": "Status of the invoice pending"
        },
        "sender": {
          "$ref": "#/definitions/Id",
          "description": "Sender of the invoice pending"
        },
        "receiver": {
          "$ref": "#/definitions/Id",
          "description": "Receiver of the invoice pending"
        },
        "items": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/InvoiceItem"
          },
          "description": "Items of the invoice pending"
        },
        "due": {
          "type": "string",
          "format": "date",
          "description": "Day in which the invoice is due"
        },
        "paymentDays": {
          "type": "number",
          "description": "Amount of days to pay the bill",
          "default": 8
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was created at",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was updated at",
          "readOnly": true
        }
      }
    },
    "InvoiceSent": {
      "required": [
        "sender",
        "receiver",
        "items",
        "due",
        "paymentDays"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the invoice pending"
        },
        "invoiceId": {
          "type": "number",
          "description": "Unique invoice id generated internally by the backend",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "WAITING_TO_BE_SENT",
            "SENT",
            "WAITING_PAYMENT",
            "RECEIVED_PAYMENT"
          ],
          "readOnly": true,
          "description": "Status of the invoice sent"
        },
        "sender": {
          "$ref": "#/definitions/Id",
          "description": "Sender of the invoice sent"
        },
        "receiver": {
          "$ref": "#/definitions/Id",
          "description": "Receiver of the invoice sent"
        },
        "items": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/InvoiceItem"
          },
          "description": "Items of the invoice sent"
        },
        "due": {
          "type": "string",
          "format": "date",
          "description": "Day in which the invoice is due"
        },
        "paymentDays": {
          "type": "number",
          "description": "Amount of days to pay the bill",
          "default": 8
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was created at",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was updated at",
          "readOnly": true
        }
      }
    },
    "InvoiceStatus": {
      "type": "string",
      "enum": [
        "WAITING_TO_BE_SENT",
        "SENT",
        "WAITING_PAYMENT",
        "RECEIVED_PAYMENT"
      ]
    },
    "ProductGroup": {
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the invoice pending"
        },
        "name": {
          "type": "string",
          "description": "Name of the product group"
        },
        "description": {
          "type": "string",
          "description": "Description of the product group"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was created at",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was updated at",
          "readOnly": true
        }
      }
    },
    "Product": {
      "required": [
        "name",
        "description",
        "purchasePrice",
        "sellingPrice",
        "priceChanged",
        "vat",
        "group",
        "inStock"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the invoice pending"
        },
        "name": {
          "type": "string",
          "description": "Name of the product"
        },
        "description": {
          "type": "string",
          "description": "Description of the product"
        },
        "purchasePrice": {
          "type": "number",
          "description": "Purchase price of the product"
        },
        "sellingPrice": {
          "type": "number",
          "description": "Selling price of the product"
        },
        "priceChanged": {
          "type": "string",
          "format": "date-time",
          "description": "Date when price of the product changed"
        },
        "vat": {
          "type": "number",
          "description": "VAT of the product"
        },
        "group": {
          "$ref": "#/definitions/Id",
          "description": "Group of the product"
        },
        "inStock": {
          "type": "boolean",
          "description": "Is the product in the stock"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was created at",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Day in which the item was updated at",
          "readOnly": true
        }
      }
    },
    "Updated": {
      "type": "string",
      "format": "date-time",
      "description": "Day in which the item was updated at",
      "readOnly": true
    },
    "User": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of the invoice pending"
        },
        "name": {
          "type": "string"
        },
        "invoicingId": {
          "type": "number",
          "description": "Invoicing id that is unique per user"
        }
      }
    }
  },
  "securityDefinitions": {
    "jwt": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization"
    }
  }
}